<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">0</article-id>
<article-id pub-id-type="doi">N/A</article-id>
<title-group>
<article-title>PyTLiDAR: A Python Framework for Tree QSM Modeling from
Terrestrial LiDAR Data</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Hagood</surname>
<given-names>John</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0009-0006-9787-2471</contrib-id>
<name>
<surname>Yang</surname>
<given-names>Fan</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<contrib contrib-type="author">
<name>
<surname>TBD</surname>
<given-names></given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Georgia Institute of Technology, United
States</institution>
</institution-wrap>
</aff>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-06-14">
<day>14</day>
<month>6</month>
<year>2025</year>
</pub-date>
<volume>¿VOL?</volume>
<issue>¿ISSUE?</issue>
<fpage>¿PAGE?</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>1970</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>biology</kwd>
<kwd>lidar</kwd>
<kwd>qsm</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>PyTLiDAR is an open-source Python software package that ports the
  MATLAB-based TreeQSM algorithm into Python, also providing an
  accessible, extensible, and GUI-driven alternative for researchers and
  practitioners in forestry, ecology, and 3D vegetation modeling. The
  software reconstructs Quantitative Structure Models (QSMs) of trees
  from terrestrial LiDAR scans and provides interactive visualization
  tools for inspecting model quality and derived tree metrics.</p>
  <p>Key features of PyTLiDAR include:</p>
  <p>-A full reimplementation of TreeQSM’s core logic in Python</p>
  <p>-A user-friendly GUI built with PyQt6 for batch or single-file
  processing</p>
  <p>-Automated and manual configuration of model generation parameters,
  including patch diameter ranges</p>
  <p>-Support for interactive 3D visualization of tree models and
  parameter tuning</p>
  <p>-Batch data processing</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>TreeQSM has been widely used in forestry and ecology for modeling
  three-dimensional tree structures from terrestrial laser scanning
  (TLS) point clouds. However, its reliance on MATLAB creates a barrier
  for users without a commercial license or familiarity with the MATLAB
  environment. Furthermore, the lack of a graphical interface and
  real-time visualization options makes parameter tuning and model
  validation labor-intensive and opaque.</p>
  <p>PyTLiDAR addresses these challenges by providing a native Python
  implementation of TreeQSM’s core algorithms, wrapped in a streamlined
  graphical interface that allows researchers to visualize and evaluate
  their models dynamically. It promotes reproducible and exploratory
  research by offering transparent parameter control, open-source
  licensing, and seamless integration into Python-based analysis
  workflows. This work lowers the barrier for adoption of QSM modeling
  by removing the MATLAB dependency, enhancing accessibility for the
  broader open-source geospatial and ecological modeling community.</p>
</sec>
<sec id="software-description">
  <title>Software Description</title>
  <p>PyTLiDAR is implemented in Python and uses PyQt6 to create an
  intuitive interface for parameter configuration and data processing.
  Upon launching the application, users are presented with fields to
  input or generate values for key modeling parameters, including the
  initial, minimum, and maximum patch diameters. The application
  supports both numeric entry and automatic generation of value ranges
  based on user-defined counts.</p>
  <p>Users may choose between batch processing of an entire directory of
  point cloud files or processing a single file. An intensity threshold
  can be set to filter the point cloud data, helping to remove noise and
  irrelevant data before modeling. The GUI also includes options for
  showing only the optimal model, based on selectable performance
  metrics such as ‘all_mean_dis’, and provides a dropdown menu to choose
  the preferred metric.</p>
  <p>Once processing is complete, PyTLiDAR provides interactive 3D
  visualization of the generated QSM using plotly. Users can inspect the
  structural fidelity of the reconstructed model, including trunk and
  branch geometry, and compare different parameter configurations for
  best fit. This combination of visual feedback and customizable
  processing offers an efficient path toward accurate and transparent
  tree structure analysis.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>We acknowledge contributions from Amir Hossein Alikhah
  Mishamandani, and the support from James T Stroud and Jeffery Cannon,
  during the development of the software and this project.</p>
</sec>
</body>
<back>
</back>
</article>
